@model Child_Care_Mangement_System.Models.Child

@{
    ViewData["Title"] = "ChildInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h1 class="my-2">Child Information</h1>
    <button class="btn btn-primary"><a style="color:white;text-decoration:none;" asp-action="AddHealthLog" asp-route-id="@Model.ChildId">Add Health Log</a> </button>

    <input type="hidden" id="childId" value="@Model.ChildId" />
    <div class="my-2 row">
        <div class="col-6">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="card-title">Height Chart</h5>
                </div>
                <div class="card-body">
                    <canvas id="height" style="width: 100%; height: 100%;"></canvas>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="card-title">Weight Chart</h5>
                </div>
                <div class="card-body">
                    <canvas id="weight" style="width: 100%; height: 100%;"></canvas>
                </div>
            </div>
        </div>
    </div>


    <h4>Meal Log</h4>


    <table id="MealLog" class="table my-2">
        <thead>
            <tr>
                <th>
                    Date
                </th>
                <th>
                    Day
                </th>
                <th>
                    Time
                </th>
                <th>
                    Item
                </th>
                <th>
                    Eat-Well Category
                </th>
                <th>Calorie</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ChildMealLogs)
            {
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Diet.WeekDay)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Meal.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Meal.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Meal.EatWellCategory.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Meal.Calorie)
                    </td>

                </tr>
            }
        </tbody>
    </table>


    <div>
        <canvas id="ChildChart"></canvas>
    </div>
    </div>

    <script type="module" src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#MealLog').DataTable();
        });
        var ChildId = $("#childId").val();
        var logObj = { heightArray: null, weightArray: null, dateArray: null }
        console.log(`Child Id=${ChildId}`)
        $.ajax({
            url: `/Carer/GetHealthLog/${ChildId}`, // Replace with your actual URL
            method: 'GET',
            dataType: 'json',
            success: function (data) {
                // Handle the JSON response here
                console.log(`HelthLogs=${data}`)
                logObj.heightArray = data.map(item => item.height);
                logObj.weightArray = data.map(item => item.weight);
                logObj.dateArray = data.map(item => item.date);
                console.log(logObj)
            },
            error: function (error) {
                console.error('Error:', error);
            }
        });
        var heightChart = setTimeout(function () {
            const ctx = document.getElementById('height');
            var mychart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: logObj.dateArray,
                    datasets: [{
                        label: 'in CM',
                        data: logObj.heightArray,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }, 1000);
        var weightChart = setTimeout(function () {
            const ctx = document.getElementById('weight');
            var mychart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: logObj.dateArray,
                    datasets: [{
                        label: 'in KG',
                        data: logObj.weightArray,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }, 1000);

    </script>
